{"version":3,"sources":["module.js","helpers.js","request-animation.js","spy-api.js","scroll-container-api.js","smooth-scroll.js","spy-context.js","scroll-container.js","scrollspy.js"],"names":[],"mappings":"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","file":"angular-scroll.min.js","sourcesContent":["/**\r\n  * x is a value between 0 and 1, indicating where in the animation you are.\r\n  */\r\nvar duScrollDefaultEasing = function (x) {\r\n  'use strict';\r\n\r\n  if(x < 0.5) {\r\n    return Math.pow(x*2, 2)/2;\r\n  }\r\n  return 1-Math.pow((1-x)*2, 2)/2;\r\n};\r\n\r\nangular.module('duScroll', [\r\n  'duScroll.scrollspy', \r\n  'duScroll.smoothScroll', \r\n  'duScroll.scrollContainer', \r\n  'duScroll.spyContext',\r\n  'duScroll.scrollHelpers'\r\n])\r\n  //Default animation duration for smoothScroll directive\r\n  .value('duScrollDuration', 350)\r\n  //Scrollspy debounce interval, set to 0 to disable\r\n  .value('duScrollSpyWait', 100)\r\n  //Wether or not multiple scrollspies can be active at once \r\n  .value('duScrollGreedy', false)\r\n  //Default offset for smoothScroll directive\r\n  .value('duScrollOffset', 0)\r\n  //Default easing function for scroll animation\r\n  .value('duScrollEasing', duScrollDefaultEasing);\r\n","angular.module('duScroll.scrollHelpers', ['duScroll.requestAnimation'])\r\n.run(function($window, $q, cancelAnimation, requestAnimation, duScrollEasing, duScrollDuration, duScrollOffset) {\r\n  'use strict';\r\n\r\n  var proto = angular.element.prototype;\r\n\r\n  var isDocument = function(el) {\r\n    return (typeof HTMLDocument !== 'undefined' && el instanceof HTMLDocument) || (el.nodeType && el.nodeType === el.DOCUMENT_NODE);\r\n  };\r\n\r\n  var isElement = function(el) {\r\n    return (typeof HTMLElement !== 'undefined' && el instanceof HTMLElement) || (el.nodeType && el.nodeType === el.ELEMENT_NODE);\r\n  };\r\n\r\n  var unwrap = function(el) {\r\n    return isElement(el) || isDocument(el) ? el : el[0];\r\n  };\r\n\r\n  proto.scrollTo = function(left, top, duration, easing) {\r\n    var aliasFn;\r\n    if(angular.isElement(left)) {\r\n      aliasFn = this.scrollToElement;\r\n    } else if(duration) {\r\n      aliasFn = this.scrollToAnimated;\r\n    }\r\n    if(aliasFn) {\r\n      return aliasFn.apply(this, arguments);\r\n    }\r\n    var el = unwrap(this);\r\n    if(isDocument(el)) {\r\n      return $window.scrollTo(left, top);\r\n    }\r\n    el.scrollLeft = left;\r\n    el.scrollTop = top;\r\n  };\r\n\r\n  var scrollAnimation, deferred;\r\n  proto.scrollToAnimated = function(left, top, duration, easing) {\r\n    if(duration && !easing) {\r\n      easing = duScrollEasing;\r\n    }\r\n    var startLeft = this.scrollLeft(),\r\n        startTop = this.scrollTop(),\r\n        deltaLeft = Math.round(left - startLeft),\r\n        deltaTop = Math.round(top - startTop);\r\n\r\n    var startTime = null;\r\n    var el = this;\r\n\r\n    var cancelOnEvents = 'scroll mousedown mousewheel touchmove keydown';\r\n    var cancelScrollAnimation = function($event) {\r\n      if (!$event || $event.which > 0) {\r\n        el.unbind(cancelOnEvents, cancelScrollAnimation);\r\n        cancelAnimation(scrollAnimation);\r\n        deferred.reject();\r\n        scrollAnimation = null;\r\n      }\r\n    };\r\n\r\n    if(scrollAnimation) {\r\n      cancelScrollAnimation();\r\n    }\r\n    deferred = $q.defer();\r\n\r\n    if(!deltaLeft && !deltaTop) {\r\n      deferred.resolve();\r\n      return deferred.promise;\r\n    }\r\n\r\n    var animationStep = function(timestamp) {\r\n      if (startTime === null) {\r\n        startTime = timestamp;\r\n      }\r\n\r\n      var progress = timestamp - startTime;\r\n      var percent = (progress >= duration ? 1 : easing(progress/duration));\r\n\r\n      el.scrollTo(\r\n        startLeft + Math.ceil(deltaLeft * percent),\r\n        startTop + Math.ceil(deltaTop * percent)\r\n      );\r\n      if(percent < 1) {\r\n        scrollAnimation = requestAnimation(animationStep);\r\n      } else {\r\n        el.unbind(cancelOnEvents, cancelScrollAnimation);\r\n        scrollAnimation = null;\r\n        deferred.resolve();\r\n      }\r\n    };\r\n\r\n    //Fix random mobile safari bug when scrolling to top by hitting status bar\r\n    el.scrollTo(startLeft, startTop);\r\n\r\n    el.bind(cancelOnEvents, cancelScrollAnimation);\r\n\r\n    scrollAnimation = requestAnimation(animationStep);\r\n    return deferred.promise;\r\n  };\r\n\r\n  proto.scrollToElement = function(target, offset, duration, easing) {\r\n    var el = unwrap(this);\r\n    if(!angular.isNumber(offset) || isNaN(offset)) {\r\n      offset = duScrollOffset;\r\n    }\r\n    var top = this.scrollTop() + unwrap(target).getBoundingClientRect().top - offset;\r\n    if(isElement(el)) {\r\n      top -= el.getBoundingClientRect().top;\r\n    }\r\n    return this.scrollTo(0, top, duration, easing);\r\n  };\r\n\r\n  var overloaders = {\r\n    scrollLeft: function(value, duration, easing) {\r\n      if(angular.isNumber(value)) {\r\n        return this.scrollTo(value, this.scrollTop(), duration, easing);\r\n      }\r\n      var el = unwrap(this);\r\n      if(isDocument(el)) {\r\n        return $window.scrollX || document.documentElement.scrollLeft || document.body.scrollLeft;\r\n      }\r\n      return el.scrollLeft;\r\n    },\r\n    scrollTop: function(value, duration, easing) {\r\n      if(angular.isNumber(value)) {\r\n        return this.scrollTo(this.scrollTop(), value, duration, easing);\r\n      }\r\n      var el = unwrap(this);\r\n      if(isDocument(el)) {\r\n        return $window.scrollY || document.documentElement.scrollTop || document.body.scrollTop;\r\n      }\r\n      return el.scrollTop;\r\n    }\r\n  };\r\n\r\n  proto.scrollToElementAnimated = function(target, offset, duration, easing) {\r\n    return this.scrollToElement(target, offset, duration || duScrollDuration, easing);\r\n  };\r\n\r\n  proto.scrollTopAnimated = function(top, duration, easing) {\r\n    return this.scrollTop(top, duration || duScrollDuration, easing);\r\n  };\r\n\r\n  proto.scrollLeftAnimated = function(left, duration, easing) {\r\n    return this.scrollLeft(left, duration || duScrollDuration, easing);\r\n  };\r\n\r\n  //Add duration and easing functionality to existing jQuery getter/setters\r\n  var overloadScrollPos = function(superFn, overloadFn) {\r\n    return function(value, duration, easing) {\r\n      if(duration) {\r\n        return overloadFn.apply(this, arguments);\r\n      }\r\n      return superFn.apply(this, arguments);\r\n    };\r\n  };\r\n\r\n  for(var methodName in overloaders) {\r\n    proto[methodName] = (proto[methodName] ? overloadScrollPos(proto[methodName], overloaders[methodName]) : overloaders[methodName]);\r\n  }\r\n});\r\n","//Adapted from https://gist.github.com/paulirish/1579671\r\nangular.module('duScroll.polyfill', [])\r\n.factory('polyfill', function($window) {\r\n  'use strict';\r\n\r\n  var vendors = ['webkit', 'moz', 'o', 'ms'];\r\n\r\n  return function(fnName, fallback) {\r\n    if($window[fnName]) {\r\n      return $window[fnName];\r\n    }\r\n    var suffix = fnName.substr(0, 1).toUpperCase() + fnName.substr(1);\r\n    for(var key, i = 0; i < vendors.length; i++) {\r\n      key = vendors[i]+suffix;\r\n      if($window[key]) {\r\n        return $window[key];\r\n      }\r\n    }\r\n    return fallback;\r\n  };\r\n});\r\n\r\nangular.module('duScroll.requestAnimation', ['duScroll.polyfill'])\r\n.factory('requestAnimation', function(polyfill, $timeout) {\r\n  'use strict';\r\n\r\n  var lastTime = 0;\r\n  var fallback = function(callback, element) {\r\n    var currTime = new Date().getTime();\r\n    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n    var id = $timeout(function() { callback(currTime + timeToCall); },\r\n      timeToCall);\r\n    lastTime = currTime + timeToCall;\r\n    return id;\r\n  };\r\n  \r\n  return polyfill('requestAnimationFrame', fallback);\r\n})\r\n.factory('cancelAnimation', function(polyfill, $timeout) {\r\n  'use strict';\r\n\r\n  var fallback = function(promise) {\r\n    $timeout.cancel(promise);\r\n  };\r\n\r\n  return polyfill('cancelAnimationFrame', fallback);\r\n});\r\n","angular.module('duScroll.spyAPI', ['duScroll.scrollContainerAPI'])\r\n.factory('spyAPI', function($rootScope, $timeout, scrollContainerAPI, duScrollGreedy, duScrollSpyWait) {\r\n  'use strict';\r\n\r\n  var createScrollHandler = function(context) {\r\n    var timer = false, queued = false;\r\n    var handler = function() {\r\n      queued = false;\r\n      var container = context.container,\r\n          containerEl = container[0],\r\n          containerOffset = 0;\r\n\r\n      if (typeof HTMLElement !== 'undefined' && containerEl instanceof HTMLElement || containerEl.nodeType && containerEl.nodeType === containerEl.ELEMENT_NODE) {\r\n        containerOffset = containerEl.getBoundingClientRect().top;\r\n      }\r\n\r\n      var i, currentlyActive, toBeActive, spies, spy, pos;\r\n      spies = context.spies;\r\n      currentlyActive = context.currentlyActive;\r\n      toBeActive = undefined;\r\n\r\n      for(i = 0; i < spies.length; i++) {\r\n        spy = spies[i];\r\n        pos = spy.getTargetPosition();\r\n        if (!pos) continue;\r\n\r\n        if(pos.top + spy.offset - containerOffset < 20 && (pos.top*-1 + containerOffset) < pos.height) {\r\n          if(!toBeActive || toBeActive.top < pos.top) {\r\n            toBeActive = {\r\n              top: pos.top,\r\n              spy: spy\r\n            };\r\n          }\r\n        }\r\n      }\r\n      if(toBeActive) {\r\n        toBeActive = toBeActive.spy;\r\n      }\r\n      if(currentlyActive === toBeActive || (duScrollGreedy && !toBeActive)) return;\r\n      if(currentlyActive) {\r\n        currentlyActive.$element.removeClass('active');\r\n        $rootScope.$broadcast('duScrollspy:becameInactive', currentlyActive.$element);\r\n      }\r\n      if(toBeActive) {\r\n        toBeActive.$element.addClass('active');\r\n        $rootScope.$broadcast('duScrollspy:becameActive', toBeActive.$element);\r\n      }\r\n      context.currentlyActive = toBeActive;\r\n    };\r\n\r\n    if(!duScrollSpyWait) {\r\n      return handler;\r\n    }\r\n\r\n    //Debounce for potential performance savings\r\n    return function() {\r\n      if(!timer) {\r\n        handler();\r\n        timer = $timeout(function() {\r\n          timer = false;\r\n          if(queued) {\r\n            handler();\r\n          }\r\n        }, duScrollSpyWait, false);\r\n      } else {\r\n        queued = true;\r\n      }\r\n    };\r\n  };\r\n\r\n  var contexts = {};\r\n\r\n  var createContext = function($scope) {\r\n    var id = $scope.$id;\r\n    var context = {\r\n      spies: []\r\n    };\r\n\r\n    context.handler = createScrollHandler(context);\r\n    contexts[id] = context;\r\n\r\n    $scope.$on('$destroy', function() {\r\n      destroyContext($scope);\r\n    });\r\n\r\n    return id;\r\n  };\r\n\r\n  var destroyContext = function($scope) {\r\n    var id = $scope.$id;\r\n    var context = contexts[id], container = context.container;\r\n    if(container) {\r\n      container.off('scroll', context.handler);\r\n    }\r\n    delete contexts[id];\r\n  };\r\n\r\n  var defaultContextId = createContext($rootScope);\r\n\r\n  var getContextForScope = function(scope) {\r\n    if(contexts[scope.$id]) {\r\n      return contexts[scope.$id];\r\n    }\r\n    if(scope.$parent) {\r\n      return getContextForScope(scope.$parent);\r\n    }\r\n    return contexts[defaultContextId];\r\n  };\r\n\r\n  var getContextForSpy = function(spy) {\r\n    var context, contextId, scope = spy.$element.scope();\r\n    if(scope) {\r\n      return getContextForScope(scope);\r\n    }\r\n    //No scope, most likely destroyed\r\n    for(contextId in contexts) {\r\n      context = contexts[contextId];\r\n      if(context.spies.indexOf(spy) !== -1) {\r\n        return context;\r\n      }\r\n    }\r\n  };\r\n\r\n  var isElementInDocument = function(element) {\r\n    while (element.parentNode) {\r\n      element = element.parentNode;\r\n      if (element === document) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  var addSpy = function(spy) {\r\n    var context = getContextForSpy(spy);\r\n    if (!context) return;\r\n    context.spies.push(spy);\r\n    if (!context.container || !isElementInDocument(context.container)) {\r\n      if(context.container) {\r\n        context.container.off('scroll', context.handler);\r\n      }\r\n      context.container = scrollContainerAPI.getContainer(spy.$element.scope());\r\n      context.container.on('scroll', context.handler).triggerHandler('scroll');\r\n    }\r\n  };\r\n\r\n  var removeSpy = function(spy) {\r\n    var context = getContextForSpy(spy);\r\n    if(spy === context.currentlyActive) {\r\n      context.currentlyActive = null;\r\n    }\r\n    var i = context.spies.indexOf(spy);\r\n    if(i !== -1) {\r\n      context.spies.splice(i, 1);\r\n    }\r\n  };\r\n\r\n  return {\r\n    addSpy: addSpy,\r\n    removeSpy: removeSpy,\r\n    createContext: createContext,\r\n    destroyContext: destroyContext,\r\n    getContextForScope: getContextForScope\r\n  };\r\n});\r\n","angular.module('duScroll.scrollContainerAPI', [])\r\n.factory('scrollContainerAPI', function($document) {\r\n  'use strict';\r\n\r\n  var containers = {};\r\n\r\n  var setContainer = function(scope, element) {\r\n    var id = scope.$id;\r\n    containers[id] = element;\r\n    return id;\r\n  };\r\n\r\n  var getContainerId = function(scope) {\r\n    if(containers[scope.$id]) {\r\n      return scope.$id;\r\n    }\r\n    if(scope.$parent) {\r\n      return getContainerId(scope.$parent);\r\n    }\r\n    return;\r\n  };\r\n\r\n  var getContainer = function(scope) {\r\n    var id = getContainerId(scope);\r\n    return id ? containers[id] : $document;\r\n  };\r\n\r\n  var removeContainer = function(scope) {\r\n    var id = getContainerId(scope);\r\n    if(id) {\r\n      delete containers[id];\r\n    }\r\n  };\r\n\r\n  return {\r\n    getContainerId:   getContainerId, \r\n    getContainer:     getContainer, \r\n    setContainer:     setContainer,\r\n    removeContainer:  removeContainer\r\n  };\r\n});\r\n","angular.module('duScroll.smoothScroll', ['duScroll.scrollHelpers', 'duScroll.scrollContainerAPI'])\r\n.directive('duSmoothScroll', function(duScrollDuration, duScrollOffset, scrollContainerAPI) {\r\n  'use strict';\r\n\r\n  return {\r\n    link : function($scope, $element, $attr) {\r\n      $element.on('click', function(e) {\r\n        if(!$attr.href || $attr.href.indexOf('#') === -1) return;\r\n\r\n        var target = document.getElementById($attr.href.replace(/.*(?=#[^\\s]+$)/, '').substring(1));\r\n        if(!target || !target.getBoundingClientRect) return;\r\n\r\n        if (e.stopPropagation) e.stopPropagation();\r\n        if (e.preventDefault) e.preventDefault();\r\n\r\n        var offset    = $attr.offset ? parseInt($attr.offset, 10) : duScrollOffset;\r\n        var duration  = $attr.duration ? parseInt($attr.duration, 10) : duScrollDuration;\r\n        var container = scrollContainerAPI.getContainer($scope);\r\n\r\n        // update active state if there's no scrolling\r\n        $scope.helpIndex = $attr.href;\r\n        $scope.$apply();\r\n\r\n        container.scrollToElement(\r\n          angular.element(target),\r\n          isNaN(offset) ? 0 : offset,\r\n          isNaN(duration) ? 0 : duration\r\n        );\r\n      });\r\n    }\r\n  };\r\n});\r\n","angular.module('duScroll.spyContext', ['duScroll.spyAPI'])\r\n.directive('duSpyContext', function(spyAPI) {\r\n  'use strict';\r\n\r\n  return {\r\n    restrict: 'A',\r\n    scope: true,\r\n    compile: function compile(tElement, tAttrs, transclude) {\r\n      return {\r\n        pre: function preLink($scope, iElement, iAttrs, controller) {\r\n          spyAPI.createContext($scope);\r\n        }\r\n      };\r\n    }\r\n  };\r\n});\r\n","angular.module('duScroll.scrollContainer', ['duScroll.scrollContainerAPI'])\r\n.directive('duScrollContainer', function(scrollContainerAPI){\r\n  'use strict';\r\n\r\n  return {\r\n    restrict: 'A',\r\n    scope: true,\r\n    compile: function compile(tElement, tAttrs, transclude) {\r\n      return {\r\n        pre: function preLink($scope, iElement, iAttrs, controller) {\r\n          iAttrs.$observe('duScrollContainer', function(element) {\r\n            if(angular.isString(element)) {\r\n              element = document.getElementById(element);\r\n            }\r\n\r\n            element = (angular.isElement(element) ? angular.element(element) : iElement);\r\n            scrollContainerAPI.setContainer($scope, element);\r\n            $scope.$on('$destroy', function() {\r\n              scrollContainerAPI.removeContainer($scope);\r\n            });\r\n          });\r\n        }\r\n      };\r\n    }\r\n  };\r\n});\r\n","angular.module('duScroll.scrollspy', ['duScroll.spyAPI'])\r\n.directive('duScrollspy', function(spyAPI, duScrollOffset, $timeout, $rootScope) {\r\n  'use strict';\r\n\r\n  var Spy = function(targetElementOrId, $element, offset) {\r\n    if(angular.isElement(targetElementOrId)) {\r\n      this.target = targetElementOrId;\r\n    } else if(angular.isString(targetElementOrId)) {\r\n      this.targetId = targetElementOrId;\r\n    }\r\n    this.$element = $element;\r\n    this.offset = offset;\r\n  };\r\n\r\n  Spy.prototype.getTargetElement = function() {\r\n    if (!this.target && this.targetId) {\r\n      this.target = document.getElementById(this.targetId);\r\n    }\r\n    return this.target;\r\n  };\r\n\r\n  Spy.prototype.getTargetPosition = function() {\r\n    var target = this.getTargetElement();\r\n    if(target) {\r\n      return target.getBoundingClientRect();\r\n    }\r\n  };\r\n\r\n  Spy.prototype.flushTargetCache = function() {\r\n    if(this.targetId) {\r\n      this.target = undefined;\r\n    }\r\n  };\r\n\r\n  return {\r\n    link: function ($scope, $element, $attr) {\r\n      var href = $attr.ngHref || $attr.href;\r\n      var targetId;\r\n\r\n      if (href && href.indexOf('#') !== -1) {\r\n        targetId = href.replace(/.*(?=#[^\\s]+$)/, '').substring(1);\r\n      } else if($attr.duScrollspy) {\r\n        targetId = $attr.duScrollspy;\r\n      }\r\n      if(!targetId) return;\r\n\r\n      // Run this in the next execution loop so that the scroll context has a chance\r\n      // to initialize\r\n      $timeout(function() {\r\n        var spy = new Spy(targetId, $element, -($attr.offset ? parseInt($attr.offset, 10) : duScrollOffset));\r\n        spyAPI.addSpy(spy);\r\n\r\n        $scope.$on('$destroy', function() {\r\n          spyAPI.removeSpy(spy);\r\n        });\r\n        $scope.$on('$locationChangeSuccess', spy.flushTargetCache.bind(spy));\r\n        $rootScope.$on('$stateChangeSuccess', spy.flushTargetCache.bind(spy));\r\n      }, 0, false);\r\n    }\r\n  };\r\n});\r\n"]}